/*! @bivarcs/emitter 0.0.7 | MIT | https://github.com/bivarcs/emitter */
"use strict";Object.defineProperty(exports,"t",{value:!0});var s=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable,n=(t,e,r)=>e in t?s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,u=(t,e)=>{for(var r in e=e||{})c.call(e,r)&&n(t,r,e[r]);if(i)for(var r of i(e))b.call(e,r)&&n(t,r,e[r]);return t};exports.default=class{constructor(t){this.Emitter$entries={},t&&t.on&&t.on.forEach(t=>{this.on(...t)})}on(e,r,t){var s=this.Emitter$entries;s[e]&&s[e].some(t=>e===t[0]&&r===t[1])||(s[e]||(s[e]=[]),s[e].push([e,r,u(u({},{once:!1,order:0}),t)]),s[e].sort((t,e)=>(t[2].order||0)-(e[2].order||0)))}off(t,e){var r=this.Emitter$entries;r[t]&&(r[t]=r[t].filter(t=>e!==t[1]))}emit(e,t){var r=this.Emitter$entries;t=u({},t&&"object"==typeof t&&!Array.isArray(t)?t:{data:t});let s=a(t,o({type:e,target:this}));return r[e]&&r[e].length&&r[e].forEach(t=>{t[1](s),t[2].once&&this.off(e,t[1])}),s}destroy(){this.Emitter$entries={}}};
