/*! @bivarcs/emitter 0.0.6 | MIT | https://github.com/bivarcs/emitter */
var a=Object.defineProperty,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,c=(t,r,e)=>r in t?a(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,f=(t,r)=>{for(var e in r=r||{})s.call(r,e)&&c(t,e,r[e]);if(i)for(var e of i(r))o.call(r,e)&&c(t,e,r[e]);return t};class t{constructor(t){this.Emitter$entries={},t&&t.on&&t.on.forEach(t=>{this.on(...t)})}on(r,e,t){var a=this.Emitter$entries;a[r]&&a[r].some(t=>r===t[0]&&e===t[1])||(a[r]||(a[r]=[]),a[r].push([r,e,f(f({},{once:!1,order:0}),t)]),a[r].sort((t,r)=>(t[2].order||0)-(r[2].order||0)))}off(t,r){var e=this.Emitter$entries;e[t]&&(e[t]=e[t].filter(t=>r!==t[1]))}emit(r,e){var t=this.Emitter$entries;t[r]&&t[r].forEach(t=>{t[1]({data:e,target:this,type:r}),t[2].once&&this.off(r,t[1])})}destroy(){this.Emitter$entries={}}}export{t as default};
