/*! @bivarcs/emitter 0.0.7 | MIT | https://github.com/bivarcs/emitter */
var a=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,b=(t,e,r)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,f=(t,e)=>{for(var r in e=e||{})s.call(e,r)&&b(t,r,e[r]);if(o)for(var r of o(e))c.call(e,r)&&b(t,r,e[r]);return t},n=(t,e)=>r(t,i(e));class t{constructor(t){this.Emitter$entries={},t&&t.on&&t.on.forEach(t=>{this.on(...t)})}on(e,r,t){var a=this.Emitter$entries;a[e]&&a[e].some(t=>e===t[0]&&r===t[1])||(a[e]||(a[e]=[]),a[e].push([e,r,f(f({},{once:!1,order:0}),t)]),a[e].sort((t,e)=>(t[2].order||0)-(e[2].order||0)))}off(t,e){var r=this.Emitter$entries;r[t]&&(r[t]=r[t].filter(t=>e!==t[1]))}emit(e,t){var r=this.Emitter$entries;let a=n(f({},t&&"object"==typeof t&&!Array.isArray(t)?t:{data:t}),{type:e,target:this});return r[e]&&r[e].length&&r[e].forEach(t=>{t[1](a),t[2].once&&this.off(e,t[1])}),a}destroy(){this.Emitter$entries={}}}export{t as default};
